C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2024 17:39:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hegip\D
                    -esktop\Egyetem\6. felev\mikrovez\mikrovez_2_project\2_nec_receive\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WA
                    -RNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hegip\Desktop
                    -\Egyetem\6. felev\mikrovez\mikrovez_2_project\2_nec_receive\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v
                    -4.3.0//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.0//Device/EFM8SB2/inc) PRINT
                    -(.\src\main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OBJ)

line level    source

   1          //=========================================================
   2          // src/2_nec_receive_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8SB2_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          //-----------------------------------------------------------------------------
  18          // Global CONSTANTS
  19          //-----------------------------------------------------------------------------
  20          #define SIGNAL_IN_ON 0U
  21          #define SIGNAL_IN_OFF 1U
  22          #define START_BURST_OFS 90U
  23          #define START_SPACE_OFS 45U
  24          #define LOGIC_ONE_OFS 22U
  25          #define LOGIC_ZERO_OFS 11U
  26          #define LED_ON 0U
  27          #define LED_OFF 1U
  28          #define VOL_PLUS_CODE 0xFFA857
  29          #define VOL_MINUS_CODE 0xFFE01F
  30          
  31          SI_SBIT(signal_in, P2, 3U);
  32          SI_SBIT(LED0, P2, 0U);
  33          
  34          const uint32_t DATA_LENGTH = 32;
  35          
  36          //-----------------------------------------------------------------------------
  37          // Global VARIABLES
  38          //-----------------------------------------------------------------------------
  39          uint32_t received_data = 0x00;
  40          uint8_t counter = 0x00;
  41          
  42          //-----------------------------------------------------------------------------
  43          // SiLabs_Startup() Routine
  44          // ----------------------------------------------------------------------------
  45          // This function is called immediately after reset, before the initialization
  46          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  47          // useful place to disable the watchdog timer, which is enable by default
  48          // and may trigger before main() in some instances.
  49          //-----------------------------------------------------------------------------
  50          void SiLabs_Startup (void)
  51          {
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2024 17:39:07 PAGE 2   

  52   1        // $[SiLabs Startup]
  53   1        // [SiLabs Startup]$
  54   1      }
  55          
  56          uint8_t Check_Within_Accepted_Range(uint8_t p_counter, uint8_t p_target,
  57                                              uint8_t p_accepted_tolerance)
  58          {
  59   1        return ((p_counter >= (p_target - p_accepted_tolerance)) &&
  60   1            (p_counter <= (p_target + p_accepted_tolerance)) ? 1 : 0);
  61   1      }
  62          
  63          uint8_t i = 0;
  64          uint8_t nec_remote_read()
  65          {
  66   1        // check for START 9ms BURST
  67   1        counter = 0;
  68   1        while(SIGNAL_IN_ON && (counter <= START_BURST_OFS))
  69   1        {
  70   2            counter++;
  71   2            while(!TCON_TF0);
  72   2            TCON_TF0 = 0x00;
  73   2        }
  74   1        if(!Check_Within_Accepted_Range(counter, START_BURST_OFS, 10))
  75   1        {
  76   2            return 0;
  77   2        }
  78   1      
  79   1        // check for START 4.5ms SPACE
  80   1        counter = 0;
  81   1        while(SIGNAL_IN_OFF && (counter <= START_SPACE_OFS))
  82   1        {
  83   2            counter++;
  84   2            while(!TCON_TF0);
  85   2            TCON_TF0 = 0x00;
  86   2        }
  87   1        if(!Check_Within_Accepted_Range(counter, START_SPACE_OFS, 5))
  88   1        {
  89   2            return 0;
  90   2        }
  91   1      
  92   1      
  93   1        for (i = 0; i < DATA_LENGTH; ++i) {
  94   2      
  95   2            // check for LOGIC ONE SIGNAL
  96   2            counter = 0;
  97   2            while(SIGNAL_IN_ON && (counter <= LOGIC_ONE_OFS))
  98   2            {
  99   3                counter++;
 100   3                while(!TCON_TF0);
 101   3                TCON_TF0 = 0x00;
 102   3            }
 103   2            if(!Check_Within_Accepted_Range(counter, LOGIC_ONE_OFS, 2) && (counter != 0))
 104   2            {
 105   3                return 0;
 106   3            }
 107   2            else
 108   2            {
 109   3                received_data |= (1U << ((DATA_LENGTH-1)-i));
 110   3            }
 111   2      
 112   2            counter = 0;
 113   2            while(SIGNAL_IN_OFF && (counter <= LOGIC_ZERO_OFS))
 114   2            {
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2024 17:39:07 PAGE 3   

 115   3                counter++;
 116   3                while(!TCON_TF0);
 117   3                TCON_TF0 = 0x00;
 118   3            }
 119   2            if(!Check_Within_Accepted_Range(counter, LOGIC_ZERO_OFS, 2) && (counter != 0))
 120   2            {
 121   3                return 0;
 122   3            }
 123   2            else
 124   2            {
 125   3                received_data &= ~(1U << ((DATA_LENGTH-1)-i));
 126   3            }
 127   2        }
 128   1      
 129   1        return 1;
 130   1      }
 131          
 132          //-----------------------------------------------------------------------------
 133          // main() Routine
 134          // ----------------------------------------------------------------------------
 135          int main (void)
 136          {
 137   1        // Call hardware initialization routine
 138   1        enter_DefaultMode_from_RESET();
 139   1        
 140   1        while (1) 
 141   1        {
 142   2          // $[Generated Run-time code]
 143   2          // [Generated Run-time code]$
 144   2      
 145   2            // if receive was successful
 146   2            if (nec_remote_read())
 147   2            {
 148   3                switch(received_data)
 149   3                {
 150   4                  case(VOL_PLUS_CODE):
 151   4                    LED0 = LED_ON;
 152   4                    break;
 153   4      
 154   4                  case(VOL_MINUS_CODE):
 155   4                    LED0 = LED_OFF;
 156   4                    break;
 157   4      
 158   4                  default:
 159   4                    LED0 = LED_OFF;
 160   4                }
 161   3      
 162   3            }
 163   2      
 164   2        }                             
 165   1      }
*** WARNING C294 IN LINE 70 OF C:\Users\hegip\Desktop\Egyetem\6. felev\mikrovez\mikrovez_2_project\2_nec_receive\src\mai
             -n.c: unreachable code
*** WARNING C294 IN LINE 99 OF C:\Users\hegip\Desktop\Egyetem\6. felev\mikrovez\mikrovez_2_project\2_nec_receive\src\mai
             -n.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    317    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2024 17:39:07 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
