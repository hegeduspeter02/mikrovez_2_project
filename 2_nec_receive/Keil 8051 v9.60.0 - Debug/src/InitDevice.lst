C51 COMPILER V9.60.0.0   INITDEVICE                                                        04/26/2024 16:44:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hegip\D
                    -esktop\Egyetem\6. felev\mikrovez\mikrovez_2_project\2_nec_receive\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LAR
                    -GE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hegip\D
                    -esktop\Egyetem\6. felev\mikrovez\mikrovez_2_project\2_nec_receive\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/
                    -8051/v4.3.0//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.0//Device/EFM8SB2/inc)
                    - PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8SB2_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        PCA_0_enter_DefaultMode_from_RESET ();
  29   1        PCACH_5_enter_DefaultMode_from_RESET ();
  30   1        PORTS_2_enter_DefaultMode_from_RESET ();
  31   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  33   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  34   1        // Restore the SFRPAGE
  35   1        SFRPAGE = SFRPAGE_save;
  36   1        // [Config Calls]$
  37   1      
  38   1      }
  39          
  40          extern void
  41          PORTS_2_enter_DefaultMode_from_RESET (void)
  42          {
  43   1        // $[P2 - Port 2 Pin Latch]
  44   1        // [P2 - Port 2 Pin Latch]$
  45   1      
  46   1        // $[P2MDOUT - Port 2 Output Mode]
  47   1        // [P2MDOUT - Port 2 Output Mode]$
  48   1      
  49   1        // $[P2MDIN - Port 2 Input Mode]
  50   1        // [P2MDIN - Port 2 Input Mode]$
  51   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        04/26/2024 16:44:17 PAGE 2   

  52   1        // $[P2SKIP - Port 2 Skip]
  53   1        // [P2SKIP - Port 2 Skip]$
  54   1      
  55   1        // $[P2DRV - Port 2 Drive Strength]
  56   1        // [P2DRV - Port 2 Drive Strength]$
  57   1      
  58   1      }
  59          
  60          extern void
  61          PBCFG_0_enter_DefaultMode_from_RESET (void)
  62          {
  63   1        // $[XBR2 - Port I/O Crossbar 2]
  64   1        /***********************************************************************
  65   1         - Weak Pullups enabled 
  66   1         - Crossbar enabled
  67   1         ***********************************************************************/
  68   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  69   1        // [XBR2 - Port I/O Crossbar 2]$
  70   1      
  71   1        // $[XBR0 - Port I/O Crossbar 0]
  72   1        // [XBR0 - Port I/O Crossbar 0]$
  73   1      
  74   1        // $[XBR1 - Port I/O Crossbar 1]
  75   1        // [XBR1 - Port I/O Crossbar 1]$
  76   1      
  77   1      }
  78          
  79          extern void
  80          PCA_0_enter_DefaultMode_from_RESET (void)
  81          {
  82   1        // $[PCA0MD - PCA Mode]
  83   1        /***********************************************************************
  84   1         - Disable Watchdog Timer
  85   1         - System clock divided by 12
  86   1         - PCA continues to function normally while the system controller is in
  87   1         Idle Mode
  88   1         - Disable the CF interrupt
  89   1         - Disable Watchdog Timer
  90   1         - Watchdog Timer Enable unlocked
  91   1         ***********************************************************************/
  92   1        SFRPAGE = 0x00;
  93   1        PCA0MD &= ~PCA0MD_WDTE__BMASK;
  94   1        PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL
  95   1            | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  96   1            | PCA0MD_WDLCK__UNLOCKED;
  97   1        // [PCA0MD - PCA Mode]$
  98   1      
  99   1        // $[PCA0H - PCA Counter/Timer High Byte]
 100   1        // [PCA0H - PCA Counter/Timer High Byte]$
 101   1      
 102   1        // $[PCA0L - PCA Counter/Timer Low Byte]
 103   1        // [PCA0L - PCA Counter/Timer Low Byte]$
 104   1      
 105   1        // $[PCA0PWM - PCA PWM Configuration]
 106   1        // [PCA0PWM - PCA PWM Configuration]$
 107   1      
 108   1        // $[PCA0CN0 - PCA Control 0]
 109   1        // [PCA0CN0 - PCA Control 0]$
 110   1      
 111   1      }
 112          
 113          extern void
 114          PCACH_5_enter_DefaultMode_from_RESET (void)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        04/26/2024 16:44:17 PAGE 3   

 115          {
 116   1        // $[PCA0 Settings Save]
 117   1        // Select Capture/Compare register)
 118   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 119   1        // [PCA0 Settings Save]$
 120   1      
 121   1        // $[PCA0CPM5 - PCA Channel 5 Capture/Compare Mode]
 122   1        /***********************************************************************
 123   1         - Disable negative edge capture
 124   1         - Disable CCF5 interrupts
 125   1         - Enable match function
 126   1         - 8 to 11-bit PWM selected
 127   1         - Disable positive edge capture
 128   1         - Disable comparator function
 129   1         - Disable PWM function
 130   1         - Disable toggle function
 131   1         ***********************************************************************/
 132   1        PCA0CPM5 = PCA0CPM5_CAPN__DISABLED | PCA0CPM5_ECCF__DISABLED
 133   1            | PCA0CPM5_MAT__ENABLED | PCA0CPM5_PWM16__8_BIT | PCA0CPM5_CAPP__DISABLED
 134   1            | PCA0CPM5_ECOM__DISABLED | PCA0CPM5_PWM__DISABLED
 135   1            | PCA0CPM5_TOG__DISABLED;
 136   1        // [PCA0CPM5 - PCA Channel 5 Capture/Compare Mode]$
 137   1      
 138   1        // $[PCA0CPL5 - PCA Channel 5 Capture Module Low Byte]
 139   1        // [PCA0CPL5 - PCA Channel 5 Capture Module Low Byte]$
 140   1      
 141   1        // $[PCA0CPH5 - PCA Channel 5 Capture Module High Byte]
 142   1        PCA0CPH5 = 0x00;
 143   1        // [PCA0CPH5 - PCA Channel 5 Capture Module High Byte]$
 144   1      
 145   1        // $[Auto-reload]
 146   1        // [Auto-reload]$
 147   1      
 148   1        // $[PCA0 Settings Restore]
 149   1        // [PCA0 Settings Restore]$
 150   1      
 151   1      }
 152          
 153          extern void
 154          TIMER01_0_enter_DefaultMode_from_RESET (void)
 155          {
 156   1        // $[Timer Initialization]
 157   1        //Save Timer Configuration
 158   1        uint8_t TCON_save;
 159   1        TCON_save = TCON;
 160   1        //Stop Timers
 161   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 162   1      
 163   1        // [Timer Initialization]$
 164   1      
 165   1        // $[TH0 - Timer 0 High Byte]
 166   1        /***********************************************************************
 167   1         - Timer 0 High Byte = 0xEB
 168   1         ***********************************************************************/
 169   1        TH0 = (0xEB << TH0_TH0__SHIFT);
 170   1        // [TH0 - Timer 0 High Byte]$
 171   1      
 172   1        // $[TL0 - Timer 0 Low Byte]
 173   1        // [TL0 - Timer 0 Low Byte]$
 174   1      
 175   1        // $[TH1 - Timer 1 High Byte]
 176   1        // [TH1 - Timer 1 High Byte]$
 177   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        04/26/2024 16:44:17 PAGE 4   

 178   1        // $[TL1 - Timer 1 Low Byte]
 179   1        // [TL1 - Timer 1 Low Byte]$
 180   1      
 181   1        // $[Timer Restoration]
 182   1        //Restore Timer Configuration
 183   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 184   1      
 185   1        // [Timer Restoration]$
 186   1      
 187   1      }
 188          
 189          extern void
 190          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 191          {
 192   1        // $[CKCON0 - Clock Control 0]
 193   1        // [CKCON0 - Clock Control 0]$
 194   1      
 195   1        // $[TMOD - Timer 0/1 Mode]
 196   1        /***********************************************************************
 197   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 198   1         - Mode 0, 13-bit Counter/Timer
 199   1         - Timer Mode
 200   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 201   1         - Timer Mode
 202   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 203   1         ***********************************************************************/
 204   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 205   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 206   1        // [TMOD - Timer 0/1 Mode]$
 207   1      
 208   1        // $[TCON - Timer 0/1 Control]
 209   1        /***********************************************************************
 210   1         - Start Timer 0 running
 211   1         ***********************************************************************/
 212   1        TCON |= TCON_TR0__RUN;
 213   1        // [TCON - Timer 0/1 Control]$
 214   1      
 215   1      }
 216          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     75    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
